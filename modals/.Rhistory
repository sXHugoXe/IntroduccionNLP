noticiasDF = map(noticias,get_news_data)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
remove(list=ls(all=T))
# Librerías ----------
library(dplyr)
library(rvest)
library(stringr)
library(purrr)
# Lectura de noticias y obtención de links ----------
# Funciones
obtieneNoticiasData = function(noticia){
titular = noticia %>% html_node("h3") %>% html_text()
fecha = noticia %>% html_node("time") %>% html_attr("datetime")
diario = noticia %>% html_node("a.wEwyrc.AVN2gc.uQIVzc.Sksgp") %>% html_text()
link = noticia %>% html_node("h3 a") %>% html_attr("href")
link = paste0(news_pag,substring(link,3))
noticiaDF = data.frame(Titular=titular, Fecha=fecha, Diario=diario, Link=link, stringsAsFactors = F)
return(noticiaDF)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,get_news_data)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
# Parámetros
noticiasYundaDF = obtieneNoticiasBusqueda("Jorge Yunda when:7d")
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
# Parámetros
noticiasYundaDF = obtieneNoticiasBusqueda("Jorge Yunda when:7d")
# Funciones
obtieneNoticiasData = function(noticia){
news_pag = "https://news.google.com/"
titular = noticia %>% html_node("h3") %>% html_text()
fecha = noticia %>% html_node("time") %>% html_attr("datetime")
diario = noticia %>% html_node("a.wEwyrc.AVN2gc.uQIVzc.Sksgp") %>% html_text()
link = noticia %>% html_node("h3 a") %>% html_attr("href")
link = paste0(news_pag,substring(link,3))
noticiaDF = data.frame(Titular=titular, Fecha=fecha, Diario=diario, Link=link, stringsAsFactors = F)
return(noticiaDF)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
# Parámetros
noticiasYundaDF = obtieneNoticiasBusqueda("Jorge Yunda when:7d")
noticiasViteriDF = obtieneNoticiasBusqueda("")
# Parámetros
noticiasYundaDF = obtieneNoticiasBusqueda("Jorge Yunda when:7d")
# Parámetros
noticiasYundaDF = obtieneNoticiasBusqueda("Jorge Yunda when:7d")
noticiasViteriDF = obtieneNoticiasBusqueda("Cynthia Viteri when:7d")
View(noticiasViteriDF)
table(noticiasYundaDF$Diario)
table(noticiasViteriDF$Diario)
noticiasOttoDF = obtieneNoticiasBusqueda("Otto Sonenholzner when:7d")
noticiasOttoDF = obtieneNoticiasBusqueda("Otto Sonnenholzner when:7d")
table(noticiasOttoDF$Titular)
table(noticiasOttoDF$Diario)
noticiasMorenoDF = obtieneNoticiasBusqueda("Lenin Moreno when:7d")
View(noticiasMorenoDF)
# Funciones
obtieneNoticiasData = function(noticia){
news_pag = "https://news.google.com/"
titular = noticia %>% html_node("h3") %>% html_text()
fecha = noticia %>% html_node("time") %>% html_attr("datetime")
diario = noticia %>% html_node("a.wEwyrc.AVN2gc.uQIVzc.Sksgp") %>% html_text()
link = noticia %>% html_node("h3 a") %>% html_attr("href")
link = paste0(news_pag,substring(link,3))
noticiaDF = data.frame(Titular=titular, Fecha=as.Date(fecha), Diario=diario, Link=link, stringsAsFactors = F)
return(noticiaDF)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
# Dataframes ----------
noticiasYundaDF = obtieneNoticiasBusqueda("Jorge Yunda when:7d")
# Dataframes ----------
noticiasYundaDF = obtieneNoticiasBusqueda("Jorge Yunda Quito when:7d")
View(noticiasYundaDF)
noticiasViteriDF = obtieneNoticiasBusqueda("Cynthia Viteri Guayaquil when:7d")
View(noticiasViteriDF)
noticiasOttoDF = obtieneNoticiasBusqueda("Otto Sonnenholzner Vicepresidente Ecuador when:7d")
noticiasOttoDF = obtieneNoticiasBusqueda("Otto Sonnenholzner vicepresidente Ecuador when:7d")
noticiasMorenoDF = obtieneNoticiasBusqueda("Lenin Moreno presidente Ecuador when:7d")
View(noticiasMorenoDF)
# Dataframes de titulares ----------
noticiasYundaDF = obtieneNoticiasBusqueda("Jorge Yunda Quito coronavirus when:7d")
View(noticiasYundaDF)
# Lectura de links de noticias ----------
noticiasYundaDF$Link[1]
# Lectura de links de noticias ----------
link_noticia = noticiasYundaDF$Link[1]
# Lectura de links de noticias ----------
link_noticia = noticiasYundaDF$Link[1]
link_noticia
texto_noticia = link_noticia %>%
html_nodes(css = "article-content")
# Lectura de links de noticias ----------
link_noticia = noticiasYundaDF$Link[1]
texto_noticia = read_html(link_noticia) %>%
html_nodes(css = "article-content")
texto_noticia = read_html(link_noticia)
texto_noticia = read_html(link_noticia) %>%
html_nodes(css = "article-content")
noticia = read_html(link_noticia)
texto_noticia = read_html(noticia)
# Lectura de links de noticias ----------
link_noticia = noticiasYundaDF$Link[1]
#//*[@id="article-content"]/div[6]/div[2]/div[2]
noticia = read_html(link_noticia)
noticia
noticia[[2]]
noticia[2]
download.file(link_noticia, destfile = "scrapedpage.html", quiet=TRUE)
# Funciones
obtieneNoticiasData = function(noticia){
news_pag = "https://news.google.com/"
titular = noticia %>% html_node("h3") %>% html_text()
fecha = noticia %>% html_node("link") #%>% html_attr("datetime")
diario = noticia %>% html_node("a.wEwyrc.AVN2gc.uQIVzc.Sksgp") %>% html_text()
link = noticia %>% html_node("h3 a") %>% html_attr("href")
link = paste0(news_pag,substring(link,3))
noticiaDF = data.frame(Titular=titular, Fecha=as.Date(fecha), Diario=diario, Link=link, stringsAsFactors = F)
return(noticiaDF)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
# Dataframes de titulares ----------
noticiasYundaDF = obtieneNoticiasBusqueda("Jorge Yunda Quito when:7d")
# Funciones
obtieneNoticiasData = function(noticia){
news_pag = "https://news.google.com/"
titular = noticia %>% html_node("link") %>% html_text()
fecha = noticia %>% html_node("time") %>% html_attr("datetime")
diario = noticia %>% html_node("a.wEwyrc.AVN2gc.uQIVzc.Sksgp") %>% html_text()
link = noticia %>% html_node("h3 a") %>% html_attr("href")
link = paste0(news_pag,substring(link,3))
noticiaDF = data.frame(Titular=titular, Fecha=as.Date(fecha), Diario=diario, Link=link, stringsAsFactors = F)
return(noticiaDF)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
# Funciones
obtieneNoticiasData = function(noticia){
news_pag = "https://news.google.com/"
titular = noticia %>% html_node("link") %>% html_text()
fecha = noticia %>% html_node("time") %>% html_attr("datetime")
diario = noticia %>% html_node("a.wEwyrc.AVN2gc.uQIVzc.Sksgp") %>% html_text()
link = noticia %>% html_node("h3 a") %>% html_attr("href")
link = paste0(news_pag,substring(link,3))
noticiaDF = data.frame(Titular=titular, Fecha=as.Date(fecha), Diario=diario, Link=link, stringsAsFactors = F)
return(noticiaDF)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
# Dataframes de titulares ----------
noticiasYundaDF = obtieneNoticiasBusqueda("Jorge Yunda Quito when:7d")
busqueda="Jorge Yunda Quito when:7d"
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
html_dir
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
View(noticiasDF)
# Funciones
obtieneNoticiasData = function(noticia){
news_pag = "https://news.google.com/"
titular = noticia %>% html_node("h3") %>% html_text()
fecha = noticia %>% html_node("time") %>% html_attr("datetime")
diario = noticia %>% html_node("a.wEwyrc.AVN2gc.uQIVzc.Sksgp") %>% html_text()
link = noticia %>% html_node("h3 a") %>% html_attr("href")
link = paste0(news_pag,substring(link,3))
noticiaDF = data.frame(Titular=titular, Fecha=fecha, Diario=diario, Link=link, stringsAsFactors = F)
return(noticiaDF)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
# Dataframes de titulares ----------
noticiasYundaDF = obtieneNoticiasBusqueda(busqueda="Jorge Yunda Quito when:7d")
View(noticiasYundaDF)
# Lectura de links de noticias ----------
link_noticia = noticiasYundaDF$Link[1]
link_noticia
# Lectura de links de noticias ----------
link_noticia = noticiasYundaDF$Link[1]
noticia_enmascarado = read_html(link_noticia)
noticia_real = noticia_enmascarado %>% html_node(css="yDmH0d")
noticia_real = noticia_enmascarado %>% html_node(xpath='//*[@id="yDmH0d"]/c-wiz/div/div[2]/c-wiz/div[3]/a')
noticia_real
noticia_real = noticia_enmascarado %>%
html_node(xpath='//*[@id="yDmH0d"]/c-wiz/div/div[2]/c-wiz/div[3]/a') %>%
html_attr("href")
noticia_real
link_enmascarado = noticia_enmascarado
link = link_enmascarado %>%
html_node(css='c-wiz div div c-wiz div a') %>%
html_attr("href")
link
# Funciones
obtieneNoticiasData = function(noticia){
news_pag = "https://news.google.com/"
titular = noticia %>% html_node("h3") %>% html_text()
fecha = noticia %>% html_node("time") %>% html_attr("datetime")
diario = noticia %>% html_node("a.wEwyrc.AVN2gc.uQIVzc.Sksgp") %>% html_text()
link_enmascarado = noticia %>% html_node("h3 a") %>% html_attr("href")
link_enmascarado = paste0(news_pag,substring(link_enmascarado,3))
link_enmascarado = read_html(link_enmascarado)
link = link_enmascarado %>%
html_node(css='c-wiz div div c-wiz div a') %>%
html_attr("href")
noticiaDF = data.frame(Titular=titular, Fecha=fecha, Diario=diario, Link=link, stringsAsFactors = F)
return(noticiaDF)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
# Dataframes de titulares ----------
noticiasYundaDF = obtieneNoticiasBusqueda(busqueda="Jorge Yunda Quito when:7d")
View(noticiasYundaDF)
# Lectura de links de noticias ----------
link = noticiasYundaDF$Link
# Lectura de links de noticias ----------
link = noticiasYundaDF$Link[1]
noticia = read_html(link)
text = noticia %>%
html_nodes('paragraphs')
text = noticia %>%
html_nodes(css='.paragraphs')
text = noticia %>%
html_nodes(css='.paragraphs') %>%
html_text()
source('D:/OneDrive/Documentos/Profesional/CONFERENCIAS/ProcesamientoLenguajeNatural/WebListening/Scrapping noticias.R', encoding = 'UTF-8', echo=TRUE)
text
noticiasYundaDF = obtieneNoticiasBusqueda(busqueda="Jorge Yunda Quito when:7d")
noticiasViteriDF = obtieneNoticiasBusqueda("Cynthia Viteri Guayaquil when:7d")
noticiasOttoDF = obtieneNoticiasBusqueda("Otto Sonnenholzner vicepresidente Ecuador when:7d")
noticiasMorenoDF = obtieneNoticiasBusqueda("Lenin Moreno presidente Ecuador when:7d")
desenmascaraLink = function(link_enmascarado){
link_enmascarado = read_html(link_enmascarado)
link = link_enmascarado %>%
html_node(css='c-wiz div div c-wiz div a') %>%
html_attr("href")
return(link)
}
desenmascaraLink = function(link_enmascarado){
link_enmascarado = read_html(link_enmascarado)
link = link_enmascarado %>%
html_node(css='c-wiz div div c-wiz div a') %>%
html_attr("href")
return(link)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
noticiasDF$Link = map_chr(noticiasDF$Link, desenmascaraLink)
return(noticiasDF)
}
# Dataframes de titulares ----------
noticiasYundaDF = obtieneNoticiasBusqueda(busqueda="Jorge Yunda Quito when:7d")
View(noticiasYundaDF)
# Funciones
obtieneNoticiasData = function(noticia){
news_pag = "https://news.google.com/"
titular = noticia %>% html_node("h3") %>% html_text()
fecha = noticia %>% html_node("time") %>% html_attr("datetime")
diario = noticia %>% html_node("a.wEwyrc.AVN2gc.uQIVzc.Sksgp") %>% html_text()
link_enmascarado = noticia %>% html_node("h3 a") %>% html_attr("href")
link_enmascarado = paste0(news_pag,substring(link_enmascarado,3))
link_enmascarado = read_html(link_enmascarado)
link = link_enmascarado %>%
html_node(css='c-wiz div div c-wiz div a') %>%
html_attr("href")
noticiaDF = data.frame(Titular=titular, Fecha=fecha, Diario=diario, Link=link, stringsAsFactors = F)
return(noticiaDF)
}
obtieneNoticiasBusqueda = function(busqueda){
news_pag = "https://news.google.com/"
html_dir = paste0(news_pag,"search?q=",gsub(" ","+",busqueda),"&hl=es-419&gl=US&ceid=US:es-419")
google_news = read_html(html_dir)
noticias = google_news %>%
html_nodes(css = "c-wiz div div div div main c-wiz div div div article")
noticiasDF = map(noticias,obtieneNoticiasData)
noticiasDF = bind_rows(noticiasDF)
noticiasDF = noticiasDF[!is.na(noticiasDF$Titular),]
return(noticiasDF)
}
# Dataframes de titulares ----------
noticiasYundaDF = obtieneNoticiasBusqueda(busqueda="Jorge Yunda Quito when:7d")
View(noticiasYundaDF)
noticiasViteriDF = obtieneNoticiasBusqueda("Cynthia Viteri Guayaquil when:7d")
View(noticiasViteriDF)
noticiasSonnenholznerDF = obtieneNoticiasBusqueda("Otto Sonnenholzner vicepresidente Ecuador when:7d")
remove(noticiasOttoDF)
noticiasMorenoDF = obtieneNoticiasBusqueda("Lenin Moreno presidente Ecuador when:7d")
save.image("RadarNoticias.RData")
View(noticiasMorenoDF)
# Lectura de links de noticias ----------
link = noticiasYundaDF$Link[1]
noticia = read_html(link)
text = noticia %>%
html_nodes(css='.paragraphs') %>%
html_text()
text
print(text)
cat(text)
# Lectura de links de noticias ----------
link = noticiasYundaDF$Link[2]
link
noticia = read_html(link)
text = noticia %>%
html_nodes(css='.paragraphs') %>%
html_text()
cat(text)
# Lectura de links de noticias ----------
link = noticiasYundaDF$Link[3]
link
noticia = read_html(link)
text = noticia %>%
html_nodes(css='.paragraphs') %>%
html_text()
cat(text)
text = noticia %>%
html_nodes(css='.paragraphs p') %>%
html_text()
text = noticia %>%
html_nodes(css='div div div p') %>%
html_text()
cat(text)
text = noticia %>%
html_nodes(css='div div div') %>%
html_text()
cat(text)
text = noticia %>%
html_nodes(css='div div div paragraphs') %>%
html_text()
text = noticia %>%
html_nodes(css='.paragraphs') %>%
html_text()
cat(text)
text = noticia %>%
html_nodes(css='.paragraphs') %>%
html_text()
cat(text)
# Lectura de links de noticias ----------
link = noticiasYundaDF$Link[3]
# Lectura de links de noticias ----------
link = noticiasYundaDF$Link[1]
link
noticia = read_html(link)
text = noticia %>%
html_nodes(css='.paragraphs') %>%
html_text()
cat(text)
text = noticia %>%
html_nodes(css='.paragraphs')
text
cat(text)
cat(text[[1]])
cat(text[1])
text[1]
text = noticia %>%
html_nodes(css='.paragraphs') %>%
html_attr('class')
text
text = noticia %>%
html_nodes(css='.paragraphs') %>%
html_children()
text
lapply(text,function(x)html_attr('class'))
lapply(text,function(x)html_attr(x,'class'))
text
sapply(text,function(x)html_attr(x,'class'))
text[is.na(sapply(text,function(x)html_attr(x,'class')))]
text = text[is.na(sapply(text,function(x)html_attr(x,'class')))]
text = text %>%
html_text()
cat(text)
# Lectura de links de noticias ----------
link = noticiasYundaDF$Link[3]
link
# Lectura de links de noticias ----------
# comercio ec: '.paragraphs'
# universo:
link = noticiasYundaDF$Link[3]
link
noticia = read_html(link)
text = noticia %>%
html_nodes(css='.field-content') %>%
html_children()
text
text
text = text[is.na(sapply(text,function(x)html_attr(x,'class')))]
text
text = text %>%
html_text()
cat(text)
text = noticia %>%
html_nodes(css='.field-name-body') %>%
html_children()
text
text = text[is.na(sapply(text,function(x)html_attr(x,'class')))]
text
text = text %>%
html_text()
cat(text)
Diarios = unique(c(noticiasMorenoDF$Diario,noticiasSonnenholznerDF$Diario,
noticiasViteriDF$Diario, noticiasYundaDF$Diario))
Diarios
remove(list=ls(all=T))
library(readxl)
library(geosphere)
library(dplyr)
library(openxlsx)
